server.compression.enabled=true
server.port=8084
logging.level.root=INFO
logging.level.org.springframework=ERROR
# Change to "validate" or "update" for production.
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://auth-staging.verinice.com/auth/realms/veo-staging
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://auth-staging.verinice.com/auth/realms/veo-staging/protocol/openid-connect/certs

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=update
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=schema.local.sql
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/veo-history
spring.datasource.username=verinice
spring.datasource.password=verinice
spring.flyway.locations=classpath:org/veo/history/migrations
spring.jndi.ignore=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
management.endpoints.web.exposure.include=health,info
veo.history.rabbitmq.subscribe=true
veo.history.rabbitmq.exchange=veo.entity_exchange
veo.history.rabbitmq.queue=veo.history_queue
veo.history.rabbitmq.dlx=veo.history_dlx
veo.history.rabbitmq.routing_key_prefix=veo.develop.message.
veo.history.rabbitmq.subscription_routing_key_prefix=veo-subscriptions.develop.message.

# Requeue Option 1: uncomment this line to reject messages immediately on exceptions.
# Rejected messages will be forwarded to the dead-letter-exchange (DLX)
spring.rabbitmq.listener.simple.defaultRequeueRejected=false

# TODO VEO-1074 Maybe bring this back in some form
# Requeue Option 2: uncomment this to reject messages after a number of retries.
# Rejected messages will be forwarded to the dead-letter-exchange (DLX).
# i.e.: 5 attempts, after 1s, 2s, 4s, 8s, 10s  (10s instead of 16s because max-interval)
# spring.rabbitmq.listener.simple.retry.initial-interval=1s
# spring.rabbitmq.listener.simple.retry.multiplier=2
# spring.rabbitmq.listener.simple.retry.max-attempts=5
# spring.rabbitmq.listener.simple.retry.max-interval=10s
# spring.rabbitmq.listener.simple.retry.enabled=true

# A comma-separated list of allowed CORS origin-patterns.
# Example: https://*.domain1.com, https://*.domain1.com:[8080,8081], https://*.domain1.com:[*]
veo.cors.origins=https://veo-web.verinice.example

# A comma-separated-list of additional headers to allow in CORS requests
# Note: The 'Authorization' and 'Content-Type' headers are always allowed.
# Example: X-Ample, X-Custom-Header
veo.cors.headers=
