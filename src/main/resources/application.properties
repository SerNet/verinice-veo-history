#
# verinice.veo reporting
# Copyright (C) 2021  Jonas Jordan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
server.port=8084
spring.main.banner-mode=off
logging.level.root=INFO
logging.level.org.springframework=ERROR
# Change to "validate" or "update" for production.
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://auth-staging.verinice.com/auth/realms/veo-staging
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://auth-staging.verinice.com/auth/realms/veo-staging/protocol/openid-connect/certs

# Change to "validate" or "update" for production.
spring.jpa.hibernate.ddl-auto=update
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/veo-history
spring.datasource.username=verinice
spring.datasource.password=verinice
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
veo.history.rabbitmq.subscribe=true
veo.history.rabbitmq.exchange=veo.entity_exchange
veo.history.rabbitmq.queue=veo.history_queue
veo.history.rabbitmq.dlx=veo.history_dlx
veo.history.rabbitmq.routing_key_prefix=veo.develop.message.

# Requeue Option 1: uncomment this line to reject messages immediately on exceptions.
# Rejected messages will be forwarded to the dead-letter-exchange (DLX)
#spring.rabbitmq.listener.simple.defaultRequeueRejected=false

# Requeue Option 2: uncomment this to reject messages after a number of retries.
# Rejected messages will be forwarded to the dead-letter-exchange (DLX).
# i.e.: 5 attempts, after 1s, 2s, 4s, 8s, 10s  (10s instead of 16s because max-interval)
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.initial-interval=1s
spring.rabbitmq.listener.simple.retry.multiplier=2
spring.rabbitmq.listener.simple.retry.max-attempts=5
spring.rabbitmq.listener.simple.retry.max-interval=10s
